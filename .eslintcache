[{"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\index.js":"1","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\App.js":"2","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\reportWebVitals.js":"3","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Auth\\Auth.js":"4","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Contact\\Contact.js":"5","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Footer\\Footer.js":"6","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Header\\Header.js":"7","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Landing\\Landing.js":"8","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Location\\Location.js":"9","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Profile\\Profile.js":"10","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Rentals\\Rentals.js":"11","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\store.js":"12","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\routes.js":"13","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\reducer.js":"14"},{"size":708,"mtime":1611853952578,"results":"15","hashOfConfig":"16"},{"size":293,"mtime":1612973183763,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":4131,"mtime":1613054239024,"results":"19","hashOfConfig":"16"},{"size":3088,"mtime":1613064132060,"results":"20","hashOfConfig":"16"},{"size":334,"mtime":1612842948598,"results":"21","hashOfConfig":"16"},{"size":3464,"mtime":1612925954335,"results":"22","hashOfConfig":"16"},{"size":723,"mtime":1612999160420,"results":"23","hashOfConfig":"16"},{"size":1075,"mtime":1613065472803,"results":"24","hashOfConfig":"16"},{"size":10681,"mtime":1613058090207,"results":"25","hashOfConfig":"16"},{"size":6118,"mtime":1612927971467,"results":"26","hashOfConfig":"16"},{"size":108,"mtime":1611857858806,"results":"27","hashOfConfig":"16"},{"size":764,"mtime":1611872697824,"results":"28","hashOfConfig":"16"},{"size":641,"mtime":1612025663678,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"aabzfk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\index.js",[],["60","61"],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\App.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\reportWebVitals.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Auth\\Auth.js",["62"],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Contact\\Contact.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Header\\Header.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Location\\Location.js",["63"],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Profile\\Profile.js",["64"],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Rentals\\Rentals.js",["65"],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {v4 as randomString} from 'uuid';\r\nimport Dropzone from 'react-dropzone';\r\nimport {GridLoader} from 'react-spinners';\r\nimport {connect} from 'react-redux';\r\nimport {getUser} from '../../redux/reducer';\r\nimport './Rentals.css';\r\n\r\nconst Rentals = props => {\r\n    const [equipment, setEquipment] = useState([]),\r\n          [name, setName] = useState(''),\r\n          [description, setDescription] = useState(''),\r\n          [isUploading, setIsUploading] = useState(false),\r\n          [imgUrl, setImgUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        getRentals();\r\n    }, [])\r\n\r\n    const getSignedRequest = ([file]) => {\r\n        console.log(file);\r\n        setIsUploading(true);\r\n        const fileName = `${randomString()}-${file.name.replace(/\\s/g, '-')}`;\r\n\r\n        axios\r\n            .get('/auth/signs3', {\r\n                params: {\r\n                    'file-name': fileName,\r\n                    'file-type': file.type,\r\n                },\r\n            })\r\n            .then(res => {\r\n                const {signedRequest, url} = res.data;\r\n                setImgUrl(url)\r\n                uploadFile(file, signedRequest, url);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(imgUrl){\r\n            axios.post('/auth/newrental', {image: imgUrl,  description: description, name: name})\r\n                    .then(() => {\r\n                        getRentals()\r\n                        setName('')\r\n                        setDescription('')\r\n                    }).catch(err => console.log(err))\r\n        }\r\n    }, [imgUrl])\r\n\r\n    const uploadFile = (file, signedRequest, url) => {\r\n        const options = {\r\n            headers: {\r\n                'Content-Type': file.type,\r\n            },\r\n        };\r\n\r\n        axios\r\n            .put(signedRequest, file, options)\r\n            .then((res) => {\r\n                setIsUploading(false)\r\n            })\r\n            .catch(err => {\r\n                setIsUploading(false)\r\n            if(err.response.status === 400){\r\n                alert('Upload failed, check CORS configuration and bucket policy. Double check AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY')\r\n            } else {\r\n                alert(`ERROR: ${err.status} ${err.stack}`)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getRentals = () => {\r\n        axios.get(`/auth/rentals`)\r\n        .then(res => {\r\n            setEquipment(res.data)\r\n            console.log(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n        return(\r\n            <section className='rentals-container'>\r\n                {!props.user.admin\r\n                    ? (\r\n                         <section className='image-container'>\r\n                             {console.log(equipment)}\r\n                            {equipment.map(equipment => (\r\n                                <div key={equipment.equipment_id}>\r\n                                    <img className='images' src ={equipment.equipment_picture} alt={equipment.name} />\r\n                                    <p>{equipment.name}</p>\r\n                                    <p className='description'>{equipment.equipment_description}</p>\r\n                                </div>\r\n                                ))}\r\n                         </section> \r\n                    ) : (\r\n                        <section>\r\n                            <h1>Add New Equipment Here</h1>\r\n                            <Dropzone\r\n                                onDropAccepted={(file) => getSignedRequest(file)}\r\n                                accept=\"image/*\"\r\n                                multiple={false}>\r\n                                {({getRootProps, getInputProps}) => (\r\n                                    <div \r\n                                        style = {{\r\n                                        position: 'relative',\r\n                                        width: 160,\r\n                                        height: 80,\r\n                                        borderWidth: 5,\r\n                                        marginTop: 25,\r\n                                        borderColor: 'gray',\r\n                                        borderStyle: 'dashed',\r\n                                        borderRadius: 5,\r\n                                        display: 'inline-block',\r\n                                        fontSize: 17,}}\r\n                                        {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        {isUploading ? <GridLoader /> : <p>Drop files here, or click to select files</p>}\r\n                                    </div>\r\n                                )}\r\n                            </Dropzone>\r\n                            <input\r\n                                value={name}\r\n                                placeholder='Equipment Name'\r\n                                onChange={e => setName(e.target.value)} />\r\n                            <input\r\n                                value={description}\r\n                                placeholder='Equipment Description'\r\n                                onChange={e => setDescription(e.target.value)} />\r\n                            <section>\r\n                                {equipment.map(equipment => (\r\n                                <div key={equipment.equipment_id}>\r\n                                    <img src ={equipment.equipment_picture} alt={equipment.name} />\r\n                                    <p>{equipment.name}</p>\r\n                                    <p className='description'>{equipment.equipment_description}</p>\r\n                                </div>\r\n                                ))}\r\n                            </section> \r\n                        </section>\r\n                    )}\r\n            </section>\r\n        )\r\n    }\r\n\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, {getUser})(Rentals);","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\store.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\routes.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\reducer.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":12,"column":19,"nodeType":"72","messageId":"73","endLine":12,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":9,"column":17,"nodeType":"76","endLine":9,"endColumn":420},{"ruleId":"77","severity":1,"message":"78","line":38,"column":6,"nodeType":"79","endLine":38,"endColumn":13,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":52,"column":8,"nodeType":"79","endLine":52,"endColumn":16,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'setAdmin' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has missing dependencies: 'description' and 'name'. Either include them or remove the dependency array.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [admin, props]",{"range":"91","text":"92"},"Update the dependencies array to be: [description, imgUrl, name]",{"range":"93","text":"94"},[1539,1546],"[admin, props]",[1693,1701],"[description, imgUrl, name]"]