[{"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\index.js":"1","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\App.js":"2","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\reportWebVitals.js":"3","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Auth\\Auth.js":"4","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Contact\\Contact.js":"5","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Footer\\Footer.js":"6","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Header\\Header.js":"7","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Landing\\Landing.js":"8","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Location\\Location.js":"9","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Profile\\Profile.js":"10","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Rentals\\Rentals.js":"11","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\store.js":"12","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\routes.js":"13","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\reducer.js":"14"},{"size":708,"mtime":1611853952578,"results":"15","hashOfConfig":"16"},{"size":227,"mtime":1611857479099,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":4015,"mtime":1612566789962,"results":"19","hashOfConfig":"16"},{"size":2256,"mtime":1612369232143,"results":"20","hashOfConfig":"16"},{"size":210,"mtime":1611852594767,"results":"21","hashOfConfig":"16"},{"size":3049,"mtime":1611962484063,"results":"22","hashOfConfig":"16"},{"size":213,"mtime":1611857442417,"results":"23","hashOfConfig":"16"},{"size":1071,"mtime":1612544277658,"results":"24","hashOfConfig":"16"},{"size":7750,"mtime":1612473406015,"results":"25","hashOfConfig":"16"},{"size":5958,"mtime":1612807952765,"results":"26","hashOfConfig":"16"},{"size":108,"mtime":1611857858806,"results":"27","hashOfConfig":"16"},{"size":764,"mtime":1611872697824,"results":"28","hashOfConfig":"16"},{"size":641,"mtime":1612025663678,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"aabzfk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\index.js",[],["62","63"],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\App.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\reportWebVitals.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Auth\\Auth.js",["64"],"import axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getUser} from '../../redux/reducer';\r\n\r\nconst Auth = props => {\r\n    const [email, setEmail] = useState(''),\r\n          [password, setPassword] = useState(''),\r\n          [verPassword, setVerPassword] = useState(''),\r\n          [registerView, setRegisterView] = useState(false),\r\n          [admin, setAdmin] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(props.user.user_id){\r\n            props.history.push('/')\r\n        }\r\n    }, [props])\r\n\r\n    const register = () => {\r\n\r\n        if(password && password === verPassword) {\r\n            axios.post('/auth/register', {email, password, admin})\r\n            .then(res => {\r\n                props.getUser(res.data)\r\n                console.log(props.user)\r\n                props.history.push('/')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert('Email already in use, please login or select another')\r\n                setEmail('')\r\n                setPassword('')\r\n                setVerPassword('')\r\n            })\r\n        } else {\r\n            alert('Passwords do not match')\r\n        }\r\n    }\r\n\r\n    const login = () => {\r\n\r\n        axios.post('/auth/login', {email, password})\r\n        .then(res => {\r\n            props.getUser(res.data)\r\n            props.history.push('/profile')\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert('Email or password incorrect')\r\n            setEmail('')\r\n            setPassword('')\r\n        })\r\n    }\r\n\r\n        return(\r\n            <div>\r\n                {console.log(registerView)}\r\n                <section>\r\n                    <h2>Ridge Rentals</h2>\r\n                    {registerView \r\n                    ? (\r\n                        <div>\r\n                            <h3>REGISTER</h3>\r\n                            <input\r\n                                value={email}\r\n                                placeholder='Email Address'\r\n                                onChange={e => setEmail(e.target.value)} />\r\n                            <input\r\n                                value={password}\r\n                                placeholder='Password'\r\n                                type='password'\r\n                                onChange={e => setPassword(e.target.value)} />\r\n                            <input\r\n                                value={verPassword}\r\n                                placeholder='Verify Password'\r\n                                type='password'\r\n                                onChange={e => setVerPassword(e.target.value)} />\r\n                            <button onClick={() => register()}>Register</button>\r\n                            <button onClik={() => setRegisterView(!registerView)}>Back</button>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <h3>Login Here</h3>\r\n                            <input\r\n                                value={email}\r\n                                name='email'\r\n                                placeholder='Email Address'\r\n                                onChange={e => setEmail(e.target.value)} />\r\n                            <input\r\n                                value={password}\r\n                                name='password'\r\n                                placeholder='Password'\r\n                                type='password'\r\n                                onChange={e => setPassword(e.target.value)} />\r\n                            <button onClick={() => login()}>LOGIN</button>\r\n                            <p>Need an account? <span onClick={() => setRegisterView(!registerView)}>REGISTER HERE</span></p>\r\n                        </div>\r\n                    )}\r\n                </section>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, {getUser})(Auth);","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Contact\\Contact.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Footer\\Footer.js",[],["65","66"],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Header\\Header.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Landing\\Landing.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Location\\Location.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Profile\\Profile.js",["67"],"import axios from 'axios';\r\nimport {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getUser, clearUser} from '../../redux/reducer';\r\n\r\nconst Profile = props => {\r\n    const [rentalHistory, setRentalHistory] = useState([]),\r\n          [editView, setEditView] = useState(false),\r\n          [passwordEdit,setPasswordEdit] = useState(false),\r\n          [email, setEmail] = useState(''),\r\n          [verEmail, setVerEmail] = useState(''),\r\n          [newPassword, setNewPassword] = useState(''),\r\n          [verNewPassword, setVerNewPassword] = useState(''),\r\n          [adminEmail, setAdminEmail] = useState(''),\r\n          [adminPassword, setAdminPassword] = useState(''),\r\n          [verAdPassword, setVerAdPassword] = useState(''),\r\n          [admin, setAdmin] = useState(null);\r\n\r\n  useEffect(() => {\r\n      setAdmin(props.user.admin)\r\n      if(!props.user.email){\r\n            props.history.push('/')\r\n            alert('Plese login or register to view your')\r\n        } else if (!admin) {\r\n            axios.get(`/auth/history/${props.user_id}`)\r\n            .then(res => {\r\n                setRentalHistory(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n  }, [props])\r\n\r\n    const updateEmail = () => {\r\n\r\n        if(email && email === verEmail){\r\n            return( \r\n                axios.put(`/auth/user/${props.user.user_id}`, {email: email})\r\n                .then(res => {\r\n                    props.getUser(res.data[0])\r\n                    editViews()\r\n                    setEmail('')\r\n                    setVerEmail('')\r\n                    alert('Email updated')\r\n                })\r\n                .catch(err => console.log(err))\r\n            )\r\n        }   \r\n        return alert('Email addresses do not match')\r\n    }\r\n\r\n    const updatePassword = () => {\r\n\r\n        if(newPassword && newPassword === verNewPassword){\r\n            return(\r\n                axios.put(`/auth/updatepassword/${props.user.user_id}`, {newPassword: newPassword})\r\n                .then(res => {\r\n                    props.getUser(res.data[0])\r\n                    passwordEditView()\r\n                    setNewPassword('')\r\n                    setVerNewPassword('')\r\n                    alert('Password updated')\r\n                })\r\n                .catch(err => console.log(err))\r\n            )\r\n        } else {\r\n            return alert('Passwords do not match')\r\n        }\r\n    }\r\n\r\n    const registerAdmin = () => {\r\n        const isAdmin = true;\r\n\r\n        if(adminPassword && adminPassword === verAdPassword) {\r\n            axios.post('/auth/registeradmin', {adminEmail, adminPassword, isAdmin})\r\n            .then((res) => {\r\n                console.log(res)\r\n                alert('New Administrator Added')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert('Email already in use, please use another')\r\n                setAdminEmail('')\r\n                setAdminPassword('')\r\n                setVerAdPassword('')\r\n            })\r\n        } else {\r\n            alert('Passwords do not match')\r\n        }\r\n    }\r\n\r\n    const editViews = () => {\r\n        setEditView(!editView)\r\n    }\r\n\r\n    const passwordEditView = () => {\r\n        setPasswordEdit(!passwordEdit)\r\n    }\r\n\r\n    const logout = () => {\r\n        axios.get('auth/logout')\r\n        .then(() => {\r\n            props.history.push('/')\r\n            props.clearUser()\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n        return(\r\n            <div>\r\n                    {!admin ? (\r\n                        <section>\r\n                            <h3>Your Rental History</h3>\r\n                            {rentalHistory.map(equipment => (\r\n                                <div key={equipment.equipment_id}>\r\n                                    <img src={equipment.equipment_picture} alt={equipment.name} />\r\n                                    <p>{equipment.rental_date}</p>\r\n                                    <p>{equipment.name}</p>\r\n                                    <p>{equipment.equipment_description}</p>\r\n                                </div>\r\n                            ))}\r\n                        </section>\r\n                    ) : (\r\n                        <section>\r\n                            <h2>REGISTER NEW ADMINISTRATOR</h2>\r\n                            <input\r\n                                value={adminEmail}\r\n                                placeholder='New Administrator Email'\r\n                                onChange={e => setAdminEmail(e.target.value)} />\r\n                            <input\r\n                                value={adminPassword}\r\n                                placeholder='New Administrator Password'\r\n                                type='password'\r\n                                onChange={e => setAdminPassword(e.target.value)} />\r\n                            <input\r\n                                value={verAdPassword}\r\n                                placeholder='Verify Administrator Password'\r\n                                type='password'\r\n                                onChange={e => setVerAdPassword(e.target.value)} />\r\n                            <button onClick={() => registerAdmin()}>Register New Administrator</button>\r\n                        </section>\r\n                    )}\r\n                <h3>Account Information</h3>\r\n                {editView\r\n                ? (\r\n                    <div>\r\n                        <h4>Change Email Address</h4>\r\n                        <p>{props.user.email}</p>\r\n                        <input\r\n                                value={email}\r\n                                placeholder='New Email'\r\n                                onChange={e => setEmail(e.target.value)} />\r\n                        <input\r\n                                value={verEmail}\r\n                                placeholder='Confirm New Email'\r\n                                onChange={e => setVerEmail(e.target.value)} />\r\n                        <button onClick={() => updateEmail()}>CONFIRM CHANGE</button>\r\n                        <button onClick={() => editViews()}>BACK</button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <h4>Account Email Address</h4>\r\n                        <p>{props.user.email}</p>\r\n                        <p>Click Here to <span onClick={() => editViews()}>Change Email</span></p>\r\n                        <span onClick={() => passwordEditView()}>Click Here to Update Password</span>\r\n                    </div>\r\n                )}\r\n                {!passwordEdit\r\n                ? (\r\n                    null\r\n                ) : (\r\n                    <section>\r\n                        <input\r\n                            value={newPassword}\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                            onChange={e => setNewPassword(e.target.value)} />\r\n                        <input\r\n                            value={verNewPassword}\r\n                            type='password'\r\n                            placeholder='Confirm New Password'\r\n                            onChange={e => setVerNewPassword(e.target.value)} />\r\n                        <button onClick={() => updatePassword()}>Update Password</button>\r\n                        <button onClick={() => passwordEditView()}>BACK</button>\r\n                    </section>\r\n                )}\r\n                <button onClick={() => logout()}>Logout</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, {getUser, clearUser})(Profile);","C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\Components\\Rentals\\Rentals.js",["68","69","70"],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\store.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\routes.js",[],"C:\\Users\\keple\\Documents\\devmountain\\Personal Project\\personal-project-ridge-rentals\\src\\redux\\reducer.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":19,"nodeType":"77","messageId":"78","endLine":11,"endColumn":27},{"ruleId":"71","replacedBy":"79"},{"ruleId":"73","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":31,"column":6,"nodeType":"83","endLine":31,"endColumn":13,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"85","line":13,"column":12,"nodeType":"77","messageId":"78","endLine":13,"endColumn":17},{"ruleId":"75","severity":1,"message":"86","line":13,"column":19,"nodeType":"77","messageId":"78","endLine":13,"endColumn":27},{"ruleId":"81","severity":1,"message":"87","line":52,"column":8,"nodeType":"83","endLine":52,"endColumn":16,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'setAdmin' is assigned a value but never used.","Identifier","unusedVar",["89"],["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'admin'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'description' and 'name'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [admin, props]",{"range":"97","text":"98"},"Update the dependencies array to be: [description, imgUrl, name]",{"range":"99","text":"100"},[1232,1239],"[admin, props]",[1713,1721],"[description, imgUrl, name]"]